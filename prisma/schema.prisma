
model Session {
  id String @id @default(cuid()) @map("_id")
  sessionToken String @unique
  userId String
  expires DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}


generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}
enum UserRole{
  ADMIN
  USER

}

model User{
  id String @id @default(cuid()) @map("_id")
  name String?
  email String @unique
  image String?
  accounts Account[]
  sessions Session[]
  role UserRole @default(USER)
  myPlayground Playground[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@unique([provider, providerAccountId])
}
 

enum Templates{
  EXPRESS
  NEXTJS
  REACTJS
  VUE
  ANGULAR
  DENO
  HONO
 }

model Playground{
  id String @id @default(cuid()) @map("_id")
  title String
  description String?
  template Templates @default(REACTJS)
  createdAt DateTime @default(now())

  updatedAt DateTime @updatedAt
  userId String 
  user User @relation(fields: [userId],references: [id], onDelete:Cascade)
  // todo template files
}